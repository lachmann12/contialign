pub fn cli<'a>() -> clap::ArgMatches<'a> {
    clap::App::new("varconti")
      .version("0.0.1")
      .author("Alexander Lachmann <alexander.lachmann@gmail.com>")
      .about("Fast hash based aligner, with the ambition to be better.")
      .arg(
        clap::Arg::with_name("input-file")
          .value_name("FILE")
          .short("f")
          .long("input-file")
          .takes_value(true)
          .required(true)
          .help("The gene count input file with genes as rows and samples as columns")
      )
      .arg(
        clap::Arg::with_name("output-file")
          .value_name("OUTFILE")
          .short("o")
          .long("output-file")
          .takes_value(true)
          .required(true)
          .help("The pairwise MI output")
      )
      .arg(
        clap::Arg::with_name("index-file")
          .value_name("INDEXFILE")
          .short("x")
          .long("index-file")
          .takes_value(true)
          .required(false)
          .help("Index file")
      )
      .arg(
        clap::Arg::with_name("index")
          .value_name("INDEX")
          .short("i")
          .long("index")
          .takes_value(false)
          .required(false)
          .help("Build index")
      )
      .arg(
        clap::Arg::with_name("verbose")
          .value_name("VERBOSE")
          .short("v")
          .long("verbose")
          .takes_value(false)
          .required(false)
          .help("Activate additional output")
      )
      .arg(
        clap::Arg::with_name("k-mer")
          .value_name("KMER")
          .short("k")
          .long("kmer")
          .takes_value(true)
          .required(false)
          .help("Length of k-mer sequences, defaults to 22")
      )
      .arg(
        clap::Arg::with_name("thread-number")
          .value_name("THREADS")
          .short("t")
          .long("thread-number")
          .takes_value(true)
          .required(false)
          .help("Number of parallel threads, defaults to 4")
      )
      .get_matches()
}